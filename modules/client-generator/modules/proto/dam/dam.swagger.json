{
  "swagger": "2.0",
  "info": {
    "title": "Dam Service",
    "version": "1.0.0",
    "contact": {
      "name": "Gemini Team",
      "email": "info@gemini-commerce.com"
    },
    "license": {
      "name": "Gemini fair use license",
      "url": "https://gemini-commerce.com/api/fair-use-license"
    }
  },
  "tags": [
    {
      "name": "Dam",
      "description": "Search Description",
      "externalDocs": {
        "url": "https://gemini-commerce.com/api/dam"
      }
    }
  ],
  "host": "dam.api.gogemini.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/dam.Dam/BatchUploadAssets": {
      "post": {
        "summary": "Batch Upload Assets",
        "operationId": "BatchUploadAssets",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damBatchUploadAssetsResponse"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damBatchUploadAssetsRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam.Dam/CreateAsset": {
      "post": {
        "summary": "Create Asset",
        "operationId": "CreateAsset",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damAsset"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damCreateAssetRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam.Dam/GetAssetByCode": {
      "post": {
        "summary": "Get Asset By Code",
        "operationId": "GetAssetByCode",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damAsset"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damGetAssetByCodeRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam.Dam/ListAssets": {
      "post": {
        "summary": "List Assets",
        "operationId": "ListAssets",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damListAssetsResponse"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damListAssetsRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam.Dam/ListAssetsByCodes": {
      "post": {
        "summary": "List Assets By Codes",
        "operationId": "ListAssetsByCodes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damListAssetsByCodesResponse"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damListAssetsByCodesRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam.Dam/ListAssetsByIds": {
      "post": {
        "summary": "List Assets By Ids",
        "operationId": "ListAssetsByIds",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damListAssetsByIdsResponse"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damListAssetsByIdsRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam.Dam/UpdateAsset": {
      "post": {
        "summary": "Update Asset",
        "operationId": "UpdateAsset",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damAsset"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damUpdateAssetRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam/batch_upload_assets": {
      "post": {
        "summary": "Batch Upload Assets",
        "operationId": "BatchUploadAssets",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damBatchUploadAssetsResponse"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damBatchUploadAssetsRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam/create_asset": {
      "post": {
        "summary": "Create Asset",
        "operationId": "CreateAsset",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damAsset"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damCreateAssetRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam/get_asset_by_code": {
      "post": {
        "summary": "Get Asset By Code",
        "operationId": "GetAssetByCode",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damAsset"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damGetAssetByCodeRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam/list_assets": {
      "post": {
        "summary": "List Assets",
        "operationId": "ListAssets",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damListAssetsResponse"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damListAssetsRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam/list_assets_by_codes": {
      "post": {
        "summary": "List Assets By Codes",
        "operationId": "ListAssetsByCodes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damListAssetsByCodesResponse"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damListAssetsByCodesRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam/list_assets_by_ids": {
      "post": {
        "summary": "List Assets By Ids",
        "operationId": "ListAssetsByIds",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damListAssetsByIdsResponse"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damListAssetsByIdsRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    },
    "/dam/update_asset": {
      "post": {
        "summary": "Update Asset",
        "operationId": "UpdateAsset",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/damAsset"
            }
          },
          "401": {
            "description": "When an endpoint receives a request with an invalid or unauthorized JWT token, a 401 error (Unauthorized) is thrown. This error indicates that the client is not authenticated or lacks the necessary permissions to access the requested resource. The server responds with the 401 error to enforce security measures and restrict unauthorized access. Clients should handle this error by taking appropriate actions, such as re-authenticating or obtaining a valid token, to gain authorized access.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damUpdateAssetRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ]
      }
    }
  },
  "definitions": {
    "AssetMetadata": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AssetOriginTypes": {
      "type": "string",
      "enum": [
        "EXTERNAL",
        "S3"
      ],
      "default": "EXTERNAL"
    },
    "BatchUploadAssetsRequestFiles": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        }
      },
      "required": [
        "filename",
        "size",
        "mimeType"
      ]
    },
    "UpdateAssetRequestPayload": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "origin": {
          "$ref": "#/definitions/damAssetOrigin"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AssetMetadata"
          }
        }
      },
      "required": [
        "origin"
      ]
    },
    "damAsset": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/damAssetType"
        },
        "code": {
          "type": "string",
          "title": "unique, not required"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AssetMetadata"
          }
        },
        "grn": {
          "type": "string"
        },
        "publicUrl": {
          "type": "string"
        }
      }
    },
    "damAssetOrigin": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/AssetOriginTypes"
        }
      }
    },
    "damAssetType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "IMAGE",
        "VIDEO",
        "VIDEO_EXTERNAL",
        "APPLICATION"
      ],
      "default": "UNKNOWN"
    },
    "damBatchUploadAssetsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BatchUploadAssetsRequestFiles"
          }
        }
      },
      "required": [
        "tenantId",
        "files"
      ]
    },
    "damBatchUploadAssetsResponse": {
      "type": "object",
      "properties": {
        "preSignedUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "damCreateAssetRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/damAssetType"
        },
        "code": {
          "type": "string"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AssetMetadata"
          }
        },
        "origin": {
          "$ref": "#/definitions/damAssetOrigin"
        }
      },
      "required": [
        "tenantId",
        "type",
        "code",
        "origin"
      ]
    },
    "damGetAssetByCodeRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "required": [
        "tenantId",
        "code"
      ]
    },
    "damListAssetsByCodesRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "codes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "tenantId",
        "codes"
      ]
    },
    "damListAssetsByCodesResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/damAsset"
          }
        }
      }
    },
    "damListAssetsByIdsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "tenantId",
        "ids"
      ]
    },
    "damListAssetsByIdsResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/damAsset"
          }
        }
      }
    },
    "damListAssetsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of assets to return. The service may return fewer than\nthis value.\nIf unspecified, at most 10 assets will be returned.\nThe maximum value is 100; values above 100 will be coerced to 100."
        },
        "pageToken": {
          "type": "string",
          "description": "A page token, received from a previous `ListAssets` call.\nProvide this to retrieve the subsequent page.\n\n\nWhen paginating, all other parameters provided to `ListAssets` must match\nthe call that provided the page token."
        }
      },
      "required": [
        "tenantId"
      ]
    },
    "damListAssetsResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/damAsset"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "damUpdateAssetRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/UpdateAssetRequestPayload"
        },
        "payloadMask": {
          "type": "string"
        }
      },
      "required": [
        "tenantId",
        "id"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "standardAuthorization": {
      "type": "oauth2",
      "name": "Authorization",
      "in": "header",
      "flow": "implicit"
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ]
}
